// <auto-generated />
using System;
using MiComposta.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiComposta.Migrations
{
    [DbContext(typeof(ComposteraDbContext))]
    [Migration("20250729020630_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiComposta.Models.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComentario"));

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Visible");

                    b.Property<DateTime?>("FechaComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("IdComentario")
                        .HasName("PK__Comentar__DDBEFBF9483B0626");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentario", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime?>("FechaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__0A5CDB5C5131DBF3");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.CompraDetalle", b =>
                {
                    b.Property<int>("IdCompraDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompraDetalle"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.HasKey("IdCompraDetalle")
                        .HasName("PK__CompraDe__A1B840C55D5F7167");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdMaterial");

                    b.ToTable("CompraDetalle", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Cotizacion", b =>
                {
                    b.Property<int>("IdCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCotizacion"));

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCosto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalVenta")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdCotizacion")
                        .HasName("PK__Cotizaci__9A6DA9EF9D1706AE");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Cotizacion", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.CotizacionDetalle", b =>
                {
                    b.Property<int>("IdCotizacionDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCotizacionDetalle"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CostoPromedioAlMomento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("IdCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.HasKey("IdCotizacionDetalle")
                        .HasName("PK__Cotizaci__6C5616FEDDF6CF7E");

                    b.HasIndex("IdCotizacion");

                    b.HasIndex("IdMaterial");

                    b.ToTable("CotizacionDetalle", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Material", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaterial"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("CostoPromedioActual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("StockActual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMaterial")
                        .HasName("PK__Material__94356E5828C2141A");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.MovimientoMaterial", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CostoPromedio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CostoUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("SaldoCantidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SaldoValor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdMovimiento")
                        .HasName("PK__Movimien__881A6AE0E2AFDF2E");

                    b.HasIndex("IdMaterial");

                    b.ToTable("MovimientoMaterial", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__098892103E23D92B");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.ProductoMaterial", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.Property<decimal>("CantidadRequerida")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdProducto", "IdMaterial")
                        .HasName("PK__Producto__90CBC4F5579376FB");

                    b.HasIndex("IdMaterial");

                    b.ToTable("ProductoMaterial", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Correo")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__E8B631AF0E6AE51E");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF9706D35F46");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuario__60695A19F695B559")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Ventum", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__BC1240BD6926AC87");

                    b.HasIndex("IdCotizacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("ProveedorMaterial", b =>
                {
                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.HasKey("IdProveedor", "IdMaterial")
                        .HasName("PK__Proveedo__71F5674A1C7334D4");

                    b.HasIndex("IdMaterial");

                    b.ToTable("ProveedorMaterial", (string)null);
                });

            modelBuilder.Entity("MiComposta.Models.Comentario", b =>
                {
                    b.HasOne("MiComposta.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Comentari__IdUsu__66603565");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.Compra", b =>
                {
                    b.HasOne("MiComposta.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Compra__IdProvee__48CFD27E");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.CompraDetalle", b =>
                {
                    b.HasOne("MiComposta.Models.Compra", "IdCompraNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdCompra")
                        .IsRequired()
                        .HasConstraintName("FK__CompraDet__IdCom__4BAC3F29");

                    b.HasOne("MiComposta.Models.Material", "IdMaterialNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("FK__CompraDet__IdMat__4CA06362");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdMaterialNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.Cotizacion", b =>
                {
                    b.HasOne("MiComposta.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Cotizacions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Cotizacio__IdUsu__5812160E");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.CotizacionDetalle", b =>
                {
                    b.HasOne("MiComposta.Models.Cotizacion", "IdCotizacionNavigation")
                        .WithMany("CotizacionDetalles")
                        .HasForeignKey("IdCotizacion")
                        .IsRequired()
                        .HasConstraintName("FK__Cotizacio__IdCot__5AEE82B9");

                    b.HasOne("MiComposta.Models.Material", "IdMaterialNavigation")
                        .WithMany("CotizacionDetalles")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("FK__Cotizacio__IdMat__5BE2A6F2");

                    b.Navigation("IdCotizacionNavigation");

                    b.Navigation("IdMaterialNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.MovimientoMaterial", b =>
                {
                    b.HasOne("MiComposta.Models.Material", "IdMaterialNavigation")
                        .WithMany("MovimientoMaterials")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("FK__Movimient__IdMat__6B24EA82");

                    b.Navigation("IdMaterialNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.ProductoMaterial", b =>
                {
                    b.HasOne("MiComposta.Models.Material", "IdMaterialNavigation")
                        .WithMany("ProductoMaterials")
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("FK__ProductoM__IdMat__534D60F1");

                    b.HasOne("MiComposta.Models.Producto", "IdProductoNavigation")
                        .WithMany("ProductoMaterials")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK__ProductoM__IdPro__52593CB8");

                    b.Navigation("IdMaterialNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("MiComposta.Models.Ventum", b =>
                {
                    b.HasOne("MiComposta.Models.Cotizacion", "IdCotizacionNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCotizacion")
                        .HasConstraintName("FK__Venta__IdCotizac__60A75C0F");

                    b.HasOne("MiComposta.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Venta__IdUsuario__5FB337D6");

                    b.Navigation("IdCotizacionNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ProveedorMaterial", b =>
                {
                    b.HasOne("MiComposta.Models.Material", null)
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .IsRequired()
                        .HasConstraintName("FK__Proveedor__IdMat__44FF419A");

                    b.HasOne("MiComposta.Models.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Proveedor__IdPro__440B1D61");
                });

            modelBuilder.Entity("MiComposta.Models.Compra", b =>
                {
                    b.Navigation("CompraDetalles");
                });

            modelBuilder.Entity("MiComposta.Models.Cotizacion", b =>
                {
                    b.Navigation("CotizacionDetalles");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("MiComposta.Models.Material", b =>
                {
                    b.Navigation("CompraDetalles");

                    b.Navigation("CotizacionDetalles");

                    b.Navigation("MovimientoMaterials");

                    b.Navigation("ProductoMaterials");
                });

            modelBuilder.Entity("MiComposta.Models.Producto", b =>
                {
                    b.Navigation("ProductoMaterials");
                });

            modelBuilder.Entity("MiComposta.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("MiComposta.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Cotizacions");

                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
